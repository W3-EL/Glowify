.container {
    width: 100vw;
    height: 50px;
    display: flex;
    justify-content: center;
    /* backdrop-filter: blur(3px); */
    /* padding-bottom:10px ; */
}

.box {
    width: 70%;
    height: 100%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    border-bottom: .5px solid white;
}

.box > div {
    width: calc(100% / 6);
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

.menu {
  display: none;
  width: 13vw;
  height: 6vh;
  position: absolute;
  left: 0;
  z-index: 9998;

}

.menu .menu_box{
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
  gap: 5%;
  flex-direction: column;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  background-color: rgba(0, 0, 0, 0.293);
  color: white;
  font-size: 2rem;
  width: 20vw;
  height: 20vh;
  
  transform: translate(-200% , -200%);
  opacity: 0;
  transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
}


.hamburger input:checked ~ .menu_box {
  transform: translate(0,-7%);
  opacity: 1;
  width: 100vw;
  height: 110vh;

}

.menu .menu_box a{
  color: white;
  text-decoration: none;
}

.menu .menu_item {
  width: 100%;
  text-align: center;
  box-shadow: 0 0 10px 0px #0000004d inset;
}

.menu .menu_item:hover {
  background-color: #eec2c96d;
}


.box > div a{
    text-decoration: none;
    text-transform: uppercase;
    color: white;
    font-size: 20px;
}

.box > .logo {
    transform: translateY(25px);
    cursor: pointer;
}

.log {
    position: absolute;
    right: 10px;
    height: 100%;
    z-index: 999;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    gap: 20px;
}
.log div {
    height: 30px;
    width: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

.log .shop {
  position: relative;

}

.log div:hover svg path {
    fill: rgba(255, 255, 255, 0.601);

}

.log div .itemIncart {
  position: absolute;
  right: 0;
  top: 0;
  transform: translate(30%, -30%);
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background-color: red;
  color: white;
  font-size: 0.7rem;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 0 2px 0 black;
}

@media (max-width:1200px) and (min-width:1000px ) {

    .box > div a{
        font-size: 15px;
    }
    
}

@media (max-width:1000px) and (min-width:800px ) {
    .box > div a{
        font-size: 13px;
    }
    
}

@media (max-width:800px) and (min-width:600px ) {
    .box > div a{
        font-size: 11px;
    }
}

.scrollable-area {
    height: 200vh;
  }

  .Btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 45px;
    height: 45px;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    transition-duration: .3s;
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.199);
    background-color: rgb(255, 65, 65);
  }
  
  .sign {
    width: 100%;
    transition-duration: .3s;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .sign svg {
    width: 17px;
  }
  
  .sign svg path {
    fill: white;
  }
  .text {
    position: absolute;
    right: 0%;
    width: 0%;
    opacity: 0;
    color: white;
    font-size: 1.2em;
    font-weight: 600;
    transition-duration: .3s;
  }
  .Btn:hover {
    width: 125px;
    border-radius: 40px;
    transition-duration: .3s;
    justify-content: flex-start;

  }
  
  .Btn:hover .sign {
    width: 30%;
    transition-duration: .3s;
    padding-left: 20px;
  }
  .Btn:hover .text {
    opacity: 1;
    width: 70%;
    transition-duration: .3s;
    padding-right: 10px;
  }
  .Btn:active {
    transform: translate(2px ,2px);
  }
.hamburger {
  cursor: pointer;
  display: inline-block;
  height: 0;
}

.hamburger input {
  display: none;
}

.hamburger svg {
  height: 3em;
  transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line {
  fill: none;
  stroke: white;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 3;
  /* Define the transition for transforming the Stroke */
  transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
              stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line-top-bottom {
  stroke-dasharray: 12 63;
}

.hamburger input:checked + svg {
  transform: rotate(-45deg);
}

.hamburger input:checked + svg .line-top-bottom {
  stroke-dasharray: 20 300;
  stroke-dashoffset: -32.42;
}

  
@media (max-width:450px) and (max-height:900px ) {
    .box > div:not(.logo){
        display: none;
    }
    .menu {
      display: block;
    }



}